import numpy as np
#Codigo para pegar os valores no relatorio do overleaf e fazer a media e
# std dos paramentros encontrados pela DE

'''
res = np.array([
       [0.44 ,0.77 ,0.74 ,39.9 ,2.73 ,0.079 ,1.60, 7.68, 1.02, 1.78 ,10.04 ],
        [ 0.563 , 0.873 , 0.31 ,52.069 , 3.612 , 0.1891,  0.546, 11.32 , 1.28,  1.93, 10.31],
        [0.74 , 0.7 , 0.55 , 36.58 , 4.09 , 0.3 , 1.31 , 8.59 , 1.37 , 1.78 , 10.01],
        [0.27 ,0.864,0.969, 20.9 , 7.08 ,0.341, 1.62 , 13.73 ,1.696, 1.85 , 12.12],
        [0.366 , 0.853 , 0.102, 55.47,  3.64 , 0.298 , 0.888 ,  10.59 , 1.092  ,1.004 , 12.82],
        [0.11, 0.81, 0.76, 27.44, 1.91, 0.22, 1.92, 1.47, 1.87, 1.29, 10.58],
        [0.723 , 0.452 , 0.312 ,31.17  ,5.036 ,  0.753,  1.71, 10.95 , 1.58 , 1.276, 24.04],
        [0.364 , 0.842 , 0.964,  24.5 , 4.3495 , 0.617, 1.708 ,12.78 , 1.359  ,1.551, 11.84],
        [0.284 , 0.712 , 0.135, 41.59  ,0.746 , 1.56, 0.838 , 4.705  ,1.204  ,1.44 ,12.08]
       ])
'''
res = np.array([
        [0.219 ,0.216 , 0.13 , 25.92 , 2.24 ,0.116 ,1.892 , 13.84 , 1.26 , 1.88 , 11.88],
        [0.28 , 0.668 , 0.649 , 34.85 , 0.288 , 0.507, 0.241, 11.98, 1.967 , 1.51 , 16.15],
        [0.759 , 0.701 , 0.547 ,30.82  ,7.706 , 0.074 , 1.405,  13.481 , 1.181 , 1.089 , 13.287],
        [0.74571259 , 0.60914091 , 0.37809828, 24.17278776  ,3.89468801 , 0.09233662,
  1.32063672 , 4.31529123,  1.37549584 , 1.25138428 ,11.99931134],
        [0.61 , 0.85 , 0.73 , 20.55 , 8.15 , 0.08 , 0.82 , 11.6 , 1.88 , 1.56 , 10.05],
        [0.196 , 0.9197 , 0.764, 57.713 , 2.34 , 0.067 , 0.687 ,11.968 , 1.213 , 1.252 , 11.14],
        [0.18 , 0.899 , 0.64 , 27.27 , 4.23, 1.25 , 0.27 , 12.4 , 1.22 , 1.61 , 13.77],
        [0.408 , 0.857 , 0.386, 31.083 , 4.837 , 0.386,  0.555, 11.045 , 1.194 , 1.57, 12.3],
        [0.7116671 ,  0.83490328  ,0.21387254, 48.76564459,  1.45182806 , 1.62133066,
  0.51986784,  4.11277247 , 1.52380935,  1.49601569, 10.50378004]
        ])
transpo = res.transpose()

for arr in transpo:
    print(arr.mean())
    #print(arr.std())
    print("&")
